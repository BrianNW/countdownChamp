>install nodejs if !installed
> npm install -g create-react-app
> reactFolder
> create-react-app countdownChamp > cd..
>src folder>index.js> 
	>import React from 'react';
	>import ReactDom from 'react-dom';
To create react components, you use .jsx extension
render() method allows us to return any jsx we like
You always need a return method to for jsx inside render()
CSS classes are called className in React
State: setState() = passes new object w/ key/value pair
  Never mutate or change state directly.
<button onClick = {() => }>
<button onClick = {() => this.changeDeadline()}>
To access what user types, add: 
 > event.target.value
 
props refer to inherited data from any parent component
Props:  You pass data or state to child components from parent components
{} refers to variables within text
Lifecycle hooks

- To add react bootstrap go to NPM and
	> npm install react-bootstrap --save
Go to react bootstrap site and add CDN link to index.html



React Components - re-usable and independent pieces of 
React code that comprise the User Interface.

ES6 importing and exporting - a new syntax for sharing code 
between separate files. Used in cases like `import React from ‘react’`

State - the pertinent data to an application. Each component 
has its local state as long as you declare add the constructor 
to a Component and declare its state object.

Updating State - When updating state, make sure to never mutate 
state directly. Doing so will lead to fatal errors in your application. 
Instead, re-declare new instances of state arrays or objects and use 
the setState() function to update state.

Props - similar to state, except this data inherits from parent 
component specifying pieces of state as properties.

LifeCycle Methods - events in React components that trigger in 
cases such as rendering on or off the screen, or during state updates. 
One example is the `componentDidMount()` lifeCycle hook.

